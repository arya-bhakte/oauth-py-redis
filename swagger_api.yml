openapi: 3.0.0
info:
  title: EI IVS API
  version: 1.0.0
servers:
  - url: <ei-ivs-dev-url>
  - url: <ei-ivs-test-url>
  - url: <ei-ivs-qa01-url>
  - url: <ei-ivs-qa04-url>
  - url: <ei-ivs-prod-url>

paths:
  /register/{registerType}/{arsId}:
    post:
      summary: Get verified identity register information
      description: Retrieves register information based on the register type and Authoritative Register Source ID
      parameters:
        - name: registerType
          in: path
          required: true
          description: |
            The type of register ("passport" or "citizenship" or "verified-identity")
            Currently, only "verified-identity" is allowed.
          example: verified-identity
          schema:
            type: string
            enum:
              - verified-identity
        - name: arsId
          in: path
          required: true
          description: The ARS ID associated with the registration
          schema:
            type: string
        - $ref: '#/components/parameters/CorrelationId'
        - $ref: '#/components/parameters/ClientName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                serviceAccessDataDetails:
                  type: object
                  required:
                    - clientName
                    - globalTransactionId
                    - recordRestricted
                    - registerAccessed
                    - requestId
                    - requestReason
                    - requestTimestamp
                    - requesterType
                    - subjectRegisterId
                  properties:
                    requesterType:
                      type: string
                    requestReason:
                      type: string
                    recordRestricted:
                      type: boolean
                    requesterRegisterId:
                      type: string
                    requestTimestamp:
                      type: string
                      format: date-time
                    requesterDetails:
                      type: object
                      properties:
                        requesterRegisterName:
                          type: string
                        requesterGivenNames:
                          type: string
                        requestorFamilyName:
                          type: string
                        organisationName:
                          type: string
                        organisationContactPerson:
                          type: string
                        organisationContactPersonPhoneNumber:
                          type: string
                        organisationContactPersonEmailAddress:
                          type: string
                    staffId:
                      type: string
                    subjectRegisterId:
                      type: string
                    clientName:
                      type: string
                    requestId:
                      type: string
                    globalTransactionId:
                      type: string
                    registerAccessed:
                      type: string
                    msg:
                      type: string
      responses:
        '200':
          description: Registration response
          headers:
            RequestId:
              $ref: '#/components/headers/RequestId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRegisterResponse'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '429':
          description: Too Many Requests
        '500':
          description: Internal server error
security:
  - BearerAuth: []

components:
  parameters:
    CorrelationId:
      name: CorrelationId
      in: header
      description: Unique transaction identifier generated by caller
      required: true
      schema:
        type: string
        format: uuid
    ClientName:
      name: ClientName
      in: header
      description: Name of the client making the request
      required: true
      schema:
        type: string

  headers:
    RequestId:
      description: Unique API request identifier generated by API
      schema:
        type: string
        format: uuid

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    GetRegisterResponse:
      description: Retrieve Register Record (Verified Identity Response)
      type: object
      required:
        - personName
        - personNameTransliterated
        - entryNumber
        - registerKey
        - legacyId
        - entryTimestamp
        - verificationDate
      properties:
        entryNumber:
          description: Primary Key
          type: integer
        entryTimestamp:
          description: Time in (HH:MM:SS:SS)
          type: string
        registerKey:
          type: string
        personName:
          type: object
          required:
            - nameInDispute
          properties:
            givenNames:
              description: The person's first names
              type: string
              maxLength: 1000
            middleNames:
              description: The person's middle names
              type: string
              maxLength: 400
            familyName:
              description: The person's family or last name
              type: string
              maxLength: 400
            nameInDispute:
              type: boolean
        personNameTransliterated:
          type: object
          properties:
            givenNamesTransliterated:
              type: string
            familyNameTransliterated:
              type: string
        gender:
          type: string
          maxLength: 50
        genderInDispute:
          type: boolean
        dateOfBirth:
          type: string
          format: date
        dateOfBirthInDispute:
          type: boolean
        placeOfBirth:
          type: string
          maxLength: 150
        placeOfBirthInDispute:
          type: boolean
        placeOfBirthTransliterated:
          type: string
        countryOfBirth:
          type: string
          maxLength: 100
        countryOfBirthInDispute:
          type: boolean
        identityStatus:
          type: string
        legacyId:
          type: string
        verificationDate:
          type: object
          required:
            - dateVerified
            - expiryDate
          properties:
            dateVerified:
              description: Date pattern yyyy-MM-dd
              type: string
              format: date
            expiryDate:
              description: Date pattern yyyy-MM-dd
              type: string
              format: date
